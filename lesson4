When would you want to use a remote repository rather than keeping all your work
local?
When I want to make the work public, I would use a remote repository, and until then keep it local.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
If Git automatically updates repository, then in a case where you are working on a particular branch or file, it would get public maybe before you are done with the work. 
That might create confusion. Therefore it is  a better idea to rather complete the file and commit and then manually update it on github to make it public.

What is the benefit of having a copy of the last known state of the remote stored locally?
It helps us to work on the branch while having a local copy of it and also to merge and commit the changes locally before you can push it. 

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Git an dGithub like other version control systems make it easier to share and collaborate work. 
Especially when there are conflicts and different people are working on the same version a file, then these provide an excellent platform. 
Whereas on the other hand, a traditional method of manually sharing files would be fine for someone who is not used to using a version control system, but would cause lot of confusion in case of conflicts.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
It is better to have a separate branch when we want to make changes that we are not sure of or if we need feedback on those changes. 
On other instances when we are sure that we want to go ahead with a certain change then we could more easily do that on master itself. 
